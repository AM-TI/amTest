{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\Documents\\\\Gonet\\\\amTest\\\\testharrypotter\\\\src\\\\DataCharacters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CharactersPrint } from './Components/CharactersPrint';\nimport { Btn } from './Components/Btn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DataCharacters = () => {\n  _s();\n\n  const [characters, setProducts] = useState([]);\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const getCharacters = async () => {\n    const data = await fetch('http://localhost:3001/characters');\n    const charactersData = await data.json();\n    setProducts(charactersData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Btn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), characters.map(characters => /*#__PURE__*/_jsxDEV(CharactersPrint, {\n        characters: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataCharacters, \"Ofja2oVRLZAqT7+XUXoLciWI6Vc=\");\n\n_c = DataCharacters;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataCharacters\");","map":{"version":3,"sources":["C:/Users/Laptop/Documents/Gonet/amTest/testharrypotter/src/DataCharacters.jsx"],"names":["React","useState","useEffect","CharactersPrint","Btn","DataCharacters","characters","setProducts","getCharacters","data","fetch","charactersData","json","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,GAAT,QAAoB,kBAApB;;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEhC,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAAxB;AACA,UAAMC,cAAc,GAAG,MAAMF,IAAI,CAACG,IAAL,EAA7B;AACAL,IAAAA,WAAW,CAACI,cAAD,CAAX;AACH,GAJD;;AAOA,sBACI;AAAA,iCAAG;AAAA,8BACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADD,EAEEL,UAAU,CAACO,GAAX,CAAgBP,UAAD,iBACZ,QAAC,eAAD;AAAiB,QAAA,UAAU,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,cADH,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH;AAAA,kBADJ;AAUH,CAzBM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, {useState, useEffect}from 'react'\r\nimport { CharactersPrint } from './Components/CharactersPrint';\r\nimport { Btn } from './Components/Btn';\r\n\r\nexport const DataCharacters = () => {\r\n\r\n    const [characters, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCharacters();\r\n    }, [])\r\n    \r\n    const getCharacters = async () => {\r\n        const data = await fetch('http://localhost:3001/characters');\r\n        const charactersData = await data.json();\r\n        setProducts(charactersData);\r\n    }\r\n\r\n\r\n    return(\r\n        <> <div>\r\n            <Btn />\r\n            {characters.map((characters) => (\r\n                <CharactersPrint characters={characters}/>\r\n            ))}\r\n            </div>\r\n        </>\r\n    );\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}